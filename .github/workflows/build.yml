name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    # needs: format_and_lint
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
        extractor: [
          "ctranspath",
          "chief-ctranspath",
          "conch",
          "conch1_5",
          "uni",
          "uni2",
          "dino-bloom",
          "gigapath",
          "h-optimus-0",
          "h-optimus-1",
          "virchow",
          "virchow-full",
          "virchow2",
          "musk",
          "mstar",
          "plip",
          "empty"
        ]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    # - name: Set up Python ${{ matrix.python-version }}
    #   uses: actions/setup-python@v5
    #   with:
    #     python-version: ${{ matrix.python-version }}
        
    - name: Install the project
      run: uv sync --extra all --dev
    
    - name: Build
      run: uv build
        
    - name: Run tests for extractor ${{ matrix.extractor }}
      run: timeout 10m uv run pytest -s tests/test_feature_extractors.py -k "${{ matrix.extractor }}" --verbose
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
  
  format_and_lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install the code linting and formatting tool Ruff
      run: pipx install ruff
    - name: Lint code with Ruff
      run: ruff check --output-format=github --target-version=py311
    - name: Check code formatting with Ruff
      run: ruff format --diff --target-version=py311
      # continue-on-error: true
  
